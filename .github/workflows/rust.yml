name: CI

on:
  push:
    branches: [master, devel]
  pull_request:
    branches: [master, devel]

env:
  CARGO_TERM_COLOR: always

jobs:

  build:
    strategy:
      matrix:
        os: [windows-2019, ubuntu-20.04, macos-11]
        toolchain: [stable, beta]
    runs-on: ${{ matrix.os }}
    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Get Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ matrix.toolchain }}

    - name: Install alsa
      if: ${{ runner.os == 'Linux' }}
      run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev

    - name: Install udev
      if: ${{ runner.os == 'Linux' }}
      run: sudo apt-get update; sudo apt-get install --no-install-recommends libudev-dev

    - name: Run cargo check --all-targets w/ -D warnings
      run: cargo check --all-targets
      env:
        RUSTFLAGS: "-D warnings"

    - name: Run cargo test w/ -D warnings
      if: ${{ runner.os == 'Linux' }}
      run: cargo test headless -- --test-threads=1
      env:
        RUSTFLAGS: "-D warnings"

    - name: Test documentation
      if: false # Skeptic is broken as of Rust 1.77
      # if: ${{ runner.os == 'Linux' }}
      run: cargo test -p doc_tests

  rustfmt:
    runs-on: ubuntu-20.04
    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Get nightly Rust toolchain with rustfmt
      uses: dtolnay/rust-toolchain@nightly
      with:
        components: rustfmt

    - name: Run cargo fmt --all -- --check
      run: cargo fmt --all -- --check

  clippy:
    runs-on: ubuntu-20.04
    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Get stable Rust toolchain with clippy
      uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy

    - name: Install alsa
      run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev

    - name: Install udev
      run: sudo apt-get update; sudo apt-get install --no-install-recommends libudev-dev

    - name: Run cargo clippy --all-targets --package ggez -- -D warnings
      run: cargo clippy --all-targets --package ggez -- -D warnings
